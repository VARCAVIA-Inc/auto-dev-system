name: Docker Build & Push

on:
  push:
    branches: [ main ]
  pull_request: {}

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}  # ghcr.io/<owner>/<repo>

jobs:
  build-test-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      # ---------- Buf & protoc plugins ----------
      - name: Install buf & protoc-gen
        run: |
          curl -sSL https://github.com/bufbuild/buf/releases/download/v1.30.0/buf-Linux-x86_64 \
            -o /usr/local/bin/buf && chmod +x /usr/local/bin/buf
          go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.34.0
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.4.0

      - name: Generate protobuf
        run: cd schemas && buf generate && cd ..

      # ---------- Unit test ----------
      - name: Unit tests
        run: |
          go vet ./...
          go test ./...

      # ---------- Build image (cache layer) ----------
      - name: Build image for integration test
        uses: docker/build-push-action@v5
        with:
          context: .
          file: services/state_aggregator/Dockerfile
          push: false
          tags: ${{ env.IMAGE_NAME }}:${{ github.sha }}

      # ---------- Integration test ----------
      - name: Integration test via dockerâ€‘compose
        run: |
          cd test/integration
          docker compose up -d
          ./smoke.sh
          docker compose down -t 0

      # ---------- Push (main branch only) ----------
      - name: Login to GHCR
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Push image to GHCR
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: services/state_aggregator/Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
