# .github/workflows/operator_bot_workflow.yml
name: Operator Bot Task Execution

on:
  workflow_dispatch:
    inputs:
      branch_name:
        description: 'Il nome del nuovo branch per questo task'
        required: true
      task_description:
        description: 'La descrizione del singolo task da eseguire'
        required: true
      commit_message:
        description: 'Il messaggio di commit per questo task'
        required: true

jobs:
  execute_task:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.BOT_GITHUB_TOKEN }}

      - name: 'Authenticate to Google Cloud'
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: 'projects/776257662402/locations/global/workloadIdentityPools/varcavia-office-pool-v2/providers/github-provider'
          service_account: 'varcavia-office-agent@gemini-api-key-466122.iam.gserviceaccount.com'

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      # MODIFICA: Caching avanzato per l'intero virtual environment
      - name: Restore or create venv cache
        id: cache-venv
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('requirements.txt') }}

      - name: Install dependencies (only if cache missed)
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt

      - name: Run Operator Bot
        env:
          BRANCH_NAME: ${{ github.event.inputs.branch_name }}
          TASK_DESCRIPTION: ${{ github.event.inputs.task_description }}
          COMMIT_MESSAGE: ${{ github.event.inputs.commit_message }}
          GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN }}
          GITHUB_USER: "VARCAVIA-Git"
          GITHUB_REPOSITORY: ${{ github.repository }}
          # MODIFICA: Forziamo la libreria a rispettare i timeout
          GOOGLE_API_USE_CLIENT_TIMEOUT: "1"
        run: |
          # Attiviamo il venv dalla cache prima di eseguire lo script
          source .venv/bin/activate
          python src/operator_bot.py