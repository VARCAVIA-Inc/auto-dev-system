name: Manager Bot Orchestration

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'development_plan.md'
  workflow_dispatch:
  schedule:
    - cron: '0 * * * *'

jobs:
  run_manager_bot:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      actions: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.BOT_GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      # --- AGGIUNTA CACHE ---
      - name: Cache pip packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }} # Se avessimo un requirements.txt
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PyYAML PyGithub openai GitPython

      - name: Run Manager Bot
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN }}
          GITHUB_USER: "VARCAVIA-Git"
          GITHUB_REPOSITORY: ${{ github.repository }}
          # ... (altri secret ed env vars) ...
          PYTHONPATH: ${{ github.workspace }}
        run: |
          python src/manager_bot.py

  send_status_notification:
    # (Questo job rimane invariato)
    runs-on: ubuntu-latest
    if: always()
    needs: [run_manager_bot]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: pip install secure-smtplib
      - name: Send workflow status email
        env:
          JOB_STATUS: ${{ needs.run_manager_bot.result }}
          # ... (altri secret ed env vars per l'email) ...
          PYTHONPATH: ${{ github.workspace }}
        run: python src/utils/report_generator.py