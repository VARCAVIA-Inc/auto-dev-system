name: Manager Bot Orchestration

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'development_plan.md'
  workflow_dispatch:
  schedule:
    - cron: '0 * * * *'

jobs:
  run_manager_bot:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      actions: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.BOT_GITHUB_TOKEN }}

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: >
            projects/${{ secrets.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ secrets.GCP_WIF_POOL }}/providers/${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Restore or create venv cache
        id: cache-venv
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('requirements.txt') }}

      - name: Install deps (only if cache missed)
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt

      - name: Run Manager Bot
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN }}
          GITHUB_USER: VARCAVIA-Git
          GITHUB_REPOSITORY: ${{ github.repository }}
          PYTHONPATH: ${{ github.workspace }}
          GOOGLE_API_USE_CLIENT_TIMEOUT: "1"
        run: |
          source .venv/bin/activate
          python src/manager_bot.py
