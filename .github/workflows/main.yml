name: Manager Bot Orchestration

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'development_plan.md'
  workflow_dispatch:
  schedule:
    - cron: '0 * * * *'

jobs:
  run_manager_bot:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      actions: write
      # Permesso fondamentale per Workload Identity Federation
      id-token: write 
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.BOT_GITHUB_TOKEN }}

      # --- NUOVA LOGICA DI AUTENTICAZIONE A GOOGLE CLOUD ---
      - name: 'Authenticate to Google Cloud'
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: 'projects/776257662402/locations/global/workloadIdentityPools/varcavia-office-pool/providers/github-provider'
          service_account: 'varcavia-office-agent@gemini-api-key-466122.iam.gserviceaccount.com'
          
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PyYAML PyGithub google-generativeai GitPython google-auth-oauthlib

      - name: Run Manager Bot
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN }}
          GITHUB_USER: "VARCAVIA-Git"
          GITHUB_REPOSITORY: ${{ github.repository }}
          # NON passiamo più una chiave API, l'autenticazione è gestita dal passo precedente
          PYTHONPATH: ${{ github.workspace }}
        run: |
          python src/manager_bot.py
          
  # Il job di notifica rimane invariato
  send_status_notification:
    runs-on: ubuntu-latest
    if: always()
    needs: [run_manager_bot]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: pip install secure-smtplib
      - name: Send workflow status email
        env:
          JOB_STATUS: ${{ needs.run_manager_bot.result }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_RUN_ID: ${{ github.run_id }}
          GITHUB_WORKFLOW: ${{ github.workflow }}
          EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
          EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
          EMAIL_USERNAME: ${{ secrets.EMAIL_USERNAME }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          RECEIVER_EMAIL: ${{ secrets.RECEIVER_EMAIL }}
          SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}
          PYTHONPATH: ${{ github.workspace }}
        run: python src/utils/report_generator.py